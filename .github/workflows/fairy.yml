name: Generate Fairy ðŸ§š Contributions

on:
  schedule:
    - cron: "0 0 * * *" 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Generate contribution graph
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/fairy-contribution-graph.svg

      - name: Replace snake with fairy
        run: |
          mkdir -p scripts
          echo 'import re

svg_path = "dist/fairy-contribution-graph.svg"

with open(svg_path, "r", encoding="utf-8") as f:
    svg_content = f.read()

rect_pattern = re.compile(r"<rect([^>]*)/>")

def rect_to_fairy(match):
    attrs = match.group(1)
    x_match = re.search(r\'x="([\d\.]+)"\', attrs)
    y_match = re.search(r\'y="([\d\.]+)"\', attrs)
    if not x_match or not y_match:
        return match.group(0)
    x = float(x_match.group(1)) + 2
    y = float(y_match.group(1)) + 6
    return f\'<text x="{x}" y="{y}" font-size="8">ðŸ§š</text>\'

new_svg_content = rect_pattern.sub(rect_to_fairy, svg_content)

with open(svg_path, "w", encoding="utf-8") as f:
    f.write(new_svg_content)

print("âœ¨ Fatina inserita con successo!")' > scripts/replace_with_fairy.py

          python3 scripts/replace_with_fairy.py

      - name: Push to output branch
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
